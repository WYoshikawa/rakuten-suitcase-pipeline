name: Daily Rakuten Rank with Image Analysis (Fixed)
on:
  schedule:
    # 毎日1回（日本時間 朝9時）
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      enable_images:
        description: '画像分析を有効にする'
        required: false
        default: 'true'
        type: boolean
      pages:
        description: '取得ページ数'
        required: false
        default: '10'
        type: string

# GitHub Actions に書き込み権限を付与
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install system dependencies (Fixed)
        run: |
          sudo apt-get update
          # 画像処理用システム依存関係（エラー回避版）
          sudo apt-get install -y \
            libglib2.0-0 \
            libsm6 \
            libxext6 \
            libxrender-dev \
            libgomp1 \
            libgstreamer1.0-0 \
            libgstreamer-plugins-base1.0-0 \
            libxcb-xinerama0 \
            libfontconfig1-dev \
            libfreetype6-dev
          
          # OpenCVの代替: libgl1-mesa-glxを避けてheadless版を使用
          sudo apt-get install -y python3-opencv || echo "OpenCV system package skipped"
      
      - name: Install Python dependencies (Image Analysis Ready)
        run: |
          pip install --upgrade pip
          
          # 基本依存関係
          pip install pandas requests requests-cache beautifulsoup4 tqdm python-dotenv
          
          # 画像分析依存関係（GitHub Actions対応版）
          pip install Pillow>=9.0.0
          pip install numpy>=1.21.0
          pip install matplotlib>=3.5.0
          pip install scikit-learn>=1.1.0
          pip install scipy>=1.8.0
          
          # OpenCV headless版（GUI依存なし）
          pip install opencv-python-headless>=4.7.0
          
          # 色彩分析
          pip install colorthief>=0.2.1
          pip install webcolors>=1.12
          
          # Google Drive連携（オプション）
          pip install google-auth==2.23.4 google-auth-oauthlib==1.1.0 google-auth-httplib2==0.1.1 google-api-python-client==2.108.0
      
      - name: Run ranking script with images
        env:
          APP_ID: ${{ secrets.APP_ID }}
        run: |
          if [ "${{ github.event.inputs.enable_images }}" = "true" ] || [ "${{ github.event_name }}" = "schedule" ]; then
            echo "🎨 画像分析有効でランキング取得開始"
            python rakuten_rank_step1.py --pages ${{ github.event.inputs.pages || '10' }} --with-images
          else
            echo "📊 通常モードでランキング取得開始"
            python rakuten_rank_step1.py --pages ${{ github.event.inputs.pages || '10' }}
          fi
      
      - name: Run image analysis (GitHub Actions optimized)
        run: |
          echo "🎨 画像分析実行中..."
          python rascal_image_analyzer_headless.py || echo "画像分析をスキップ（画像データなしまたはエラー）"
      
      - name: Organize files
        run: |
          mkdir -p data
          mkdir -p data/images
          
          DATE=$(TZ='Asia/Tokyo' date +%Y-%m-%d)
          
          echo "生成されたファイル確認:"
          ls -la rank_base_*.csv image_analysis_*.json 2>/dev/null || echo "一部ファイルなし"
          
          # CSVファイル保存
          if ls rank_base_*_with_images.csv 1> /dev/null 2>&1; then
            cp rank_base_*_with_images.csv data/rank_base_${DATE}_with_images.csv
            cp rank_base_*_with_images.csv data/rank_base_latest_with_images.csv
            echo "✅ 画像付きCSVファイル保存"
          elif ls rank_base_*.csv 1> /dev/null 2>&1; then
            cp rank_base_*.csv data/rank_base_${DATE}.csv
            cp rank_base_*.csv data/rank_base_latest.csv
            echo "✅ 通常CSVファイル保存"
          fi
          
          # 画像分析結果保存
          if ls image_analysis_*.json 1> /dev/null 2>&1; then
            cp image_analysis_*.json data/images/
            echo "✅ 画像分析結果保存"
          fi
      
      - name: Analyze changes
        run: |
          echo "🔍 ランキング変化分析中..."
          python analyze_changes.py || echo "変化分析をスキップ（初回実行または比較データなし）"
      
      - name: Commit and push changes
        run: |
          git config --local user.email "rascal@github.com"
          git config --local user.name "RASCAL Bot"
          git add data/
          
          if git diff --staged --quiet; then
            echo "変更なし"
          else
            if ls data/images/*.json 1> /dev/null 2>&1; then
              git commit -m "🎨 Daily ranking update with image analysis $(TZ='Asia/Tokyo' date +%Y-%m-%d)"
            else
              git commit -m "📊 Daily ranking update $(TZ='Asia/Tokyo' date +%Y-%m-%d)"
            fi
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            echo "✅ データ更新完了"
          fi
