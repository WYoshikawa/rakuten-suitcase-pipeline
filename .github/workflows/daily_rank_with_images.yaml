name: Daily Rakuten TOP100 Analysis
on:
  schedule:
    # 毎日1回（日本時間 朝9時）
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      analysis_mode:
        description: '分析モード'
        required: false
        default: 'full'
        type: choice
        options:
        - 'full'
        - 'basic'

# GitHub Actions に書き込み権限を付与
permissions:
  contents: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies (Lightweight)
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "✅ 軽量化依存関係インストール完了"
      
      - name: Run TOP100 ranking data collection
        env:
          APP_ID: ${{ secrets.APP_ID }}
        run: |
          echo "🦝 RASCAL TOP100 データ取得開始"
          python rakuten_rank_top100.py
          echo "✅ TOP100データ取得完了"
      
      - name: Run comprehensive analysis
        run: |
          echo "🔍 RASCAL TOP100 包括分析実行中..."
          python rascal_top100_analyzer.py
          echo "✅ 包括分析完了"
      
      - name: Organize data files
        run: |
          # データディレクトリ作成
          mkdir -p data
          mkdir -p data/changes
          
          # 日本時間でタイムスタンプ取得
          DATE=$(TZ='Asia/Tokyo' date +%Y-%m-%d)
          TIME=$(TZ='Asia/Tokyo' date +%H-%M)
          
          echo "📁 生成されたファイル確認:"
          ls -la rank_base_*.csv *.json 2>/dev/null || echo "一部ファイルなし"
          
          # CSVファイル保存
          if ls rank_base_*.csv 1> /dev/null 2>&1; then
            cp rank_base_*.csv data/rank_base_${DATE}.csv
            cp rank_base_*.csv data/rank_base_latest.csv
            echo "✅ TOP100 CSVファイル保存完了"
          else
            echo "❌ CSVファイルが見つかりません"
            exit 1
          fi
          
          # 分析結果保存
          if ls data/changes/top100_analysis_*.json 1> /dev/null 2>&1; then
            echo "✅ 分析結果JSON保存済み"
          elif ls top100_analysis_*.json 1> /dev/null 2>&1; then
            cp top100_analysis_*.json data/changes/
            echo "✅ 分析結果JSON保存完了"
          fi
      
      - name: Validate data quality
        run: |
          echo "🔍 データ品質チェック中..."
          python -c "
          import pandas as pd
          import os
          
          if os.path.exists('data/rank_base_latest.csv'):
              df = pd.read_csv('data/rank_base_latest.csv')
              print(f'✅ データ品質OK: {len(df)}件取得')
              print(f'📊 価格範囲: ¥{df[\"itemPrice\"].min():,} - ¥{df[\"itemPrice\"].max():,}')
              
              # 30機能フラグの検証
              feature_cols = [col for col in df.columns if col.startswith(('has_', 'is_', 'for_', 'appeal_'))]
              print(f'🏷️ 機能フラグ: {len(feature_cols)}種類検出')
              
              if len(df) < 50:
                  print('⚠️ 警告: データ件数が少なすぎます')
                  exit(1)
          else:
              print('❌ データファイルが見つかりません')
              exit(1)
          "
      
      - name: Commit and push changes
        run: |
          git config --local user.email "rascal-top100@github.com"
          git config --local user.name "RASCAL TOP100 Bot"
          git add data/
          
          # 変更があるかチェック
          if git diff --staged --quiet; then
            echo "📝 変更なし - コミットをスキップ"
          else
            # コミットメッセージの生成
            ITEMS_COUNT=$(python -c "
            import pandas as pd
            try:
                df = pd.read_csv('data/rank_base_latest.csv')
                print(len(df))
            except:
                print('?')
            ")
            
            git commit -m "🦝 Daily TOP100 analysis: ${ITEMS_COUNT}件分析完了 $(TZ='Asia/Tokyo' date +%Y-%m-%d_%H:%M)"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            echo "✅ データ更新・プッシュ完了"
          fi
      
      - name: Analysis summary
        run: |
          echo ""
          echo "🦝============================================"
          echo "🦝 RASCAL TOP100 軽量化版 実行完了"
          echo "🦝============================================"
          echo "📊 楽天スーツケースTOP100分析"
          echo "🏷️ 30種類機能フラグ検出"
          echo "💰 実売価格推定・商品名品質評価"
          echo "📈 市場変化・キーワード重要度分析"
          echo "🎯 画像分析なし（軽量化版）"
          echo "⚡ 高速・安定・効率的"
          echo "🦝============================================"
