name: Daily Rakuten Rank CSV
on:
  schedule:
    # 毎日1回（日本時間 朝9時）
    - cron: '0 0 * * *'
  workflow_dispatch:

# GitHub Actions に書き込み権限を付与
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pandas
      
      - name: Run ranking script
        env:
          APP_ID: ${{ secrets.APP_ID }}
        run: python rakuten_rank_step1.py --pages 10
      
      - name: Organize CSV files
        run: |
          # dataフォルダを作成
          mkdir -p data
          
          # 日本時間でタイムスタンプ取得
          DATE=$(TZ='Asia/Tokyo' date +%Y-%m-%d)
          TIME=$(TZ='Asia/Tokyo' date +%H-%M)
          
          # 生成されたCSVファイルを確認
          echo "Generated CSV files:"
          ls -la rank_base_*.csv
          
          # タイムスタンプ付きで保存
          if ls rank_base_*.csv 1> /dev/null 2>&1; then
            cp rank_base_*.csv data/rank_base_${DATE}.csv
            cp rank_base_*.csv data/rank_base_latest.csv
            echo "CSV files saved successfully"
          else
            echo "No CSV files found!"
            exit 1
          fi
      
      - name: Analyze ranking changes
        run: |
          echo "🔍 ランキング変化を分析中..."
          python analyze_changes.py || echo "変化分析をスキップ（初回実行または比較データなし）"
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          
          # 変更があるかチェック
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "📊 Daily ranking update $(TZ='Asia/Tokyo' date +%Y-%m-%d)"
            git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
            echo "Data updated and pushed successfully"
          fi
